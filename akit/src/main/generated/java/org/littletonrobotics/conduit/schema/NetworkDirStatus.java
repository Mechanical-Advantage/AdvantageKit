// automatically generated by the FlatBuffers compiler, do not modify

package org.littletonrobotics.conduit.schema;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class NetworkDirStatus extends Struct {
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public NetworkDirStatus __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long bandwidthKbps() { return bb.getLong(bb_pos + 0); }
  public void mutateBandwidthKbps(long bandwidth_kbps) { bb.putLong(bb_pos + 0, bandwidth_kbps); }
  public long bytes() { return bb.getLong(bb_pos + 8); }
  public void mutateBytes(long bytes) { bb.putLong(bb_pos + 8, bytes); }
  public long dropped() { return bb.getLong(bb_pos + 16); }
  public void mutateDropped(long dropped) { bb.putLong(bb_pos + 16, dropped); }
  public long errors() { return bb.getLong(bb_pos + 24); }
  public void mutateErrors(long errors) { bb.putLong(bb_pos + 24, errors); }
  public long packets() { return bb.getLong(bb_pos + 32); }
  public void mutatePackets(long packets) { bb.putLong(bb_pos + 32, packets); }

  public static int createNetworkDirStatus(FlatBufferBuilder builder, long bandwidthKbps, long bytes, long dropped, long errors, long packets) {
    builder.prep(8, 40);
    builder.putLong(packets);
    builder.putLong(errors);
    builder.putLong(dropped);
    builder.putLong(bytes);
    builder.putLong(bandwidthKbps);
    return builder.offset();
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public NetworkDirStatus get(int j) { return get(new NetworkDirStatus(), j); }
    public NetworkDirStatus get(NetworkDirStatus obj, int j) {  return obj.__assign(__element(j), bb); }
  }
}

