// automatically generated by the FlatBuffers compiler, do not modify

package org.littletonrobotics.conduit.schema;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class Vector3 extends Struct {
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public Vector3 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public double x() { return bb.getDouble(bb_pos + 0); }
  public void mutateX(double x) { bb.putDouble(bb_pos + 0, x); }
  public double y() { return bb.getDouble(bb_pos + 8); }
  public void mutateY(double y) { bb.putDouble(bb_pos + 8, y); }
  public double z() { return bb.getDouble(bb_pos + 16); }
  public void mutateZ(double z) { bb.putDouble(bb_pos + 16, z); }

  public static int createVector3(FlatBufferBuilder builder, double x, double y, double z) {
    builder.prep(8, 24);
    builder.putDouble(z);
    builder.putDouble(y);
    builder.putDouble(x);
    return builder.offset();
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public Vector3 get(int j) { return get(new Vector3(), j); }
    public Vector3 get(Vector3 obj, int j) {  return obj.__assign(__element(j), bb); }
  }
}

