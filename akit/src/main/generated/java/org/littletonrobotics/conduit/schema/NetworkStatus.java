// automatically generated by the FlatBuffers compiler, do not modify

package org.littletonrobotics.conduit.schema;

import com.google.flatbuffers.BaseVector;
import com.google.flatbuffers.BooleanVector;
import com.google.flatbuffers.ByteVector;
import com.google.flatbuffers.Constants;
import com.google.flatbuffers.DoubleVector;
import com.google.flatbuffers.FlatBufferBuilder;
import com.google.flatbuffers.FloatVector;
import com.google.flatbuffers.IntVector;
import com.google.flatbuffers.LongVector;
import com.google.flatbuffers.ShortVector;
import com.google.flatbuffers.StringVector;
import com.google.flatbuffers.Struct;
import com.google.flatbuffers.Table;
import com.google.flatbuffers.UnionVector;
import java.nio.ByteBuffer;
import java.nio.ByteOrder;

@SuppressWarnings("unused")
public final class NetworkStatus extends Struct {
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public NetworkStatus __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public org.littletonrobotics.conduit.schema.NetworkDirStatus rx() { return rx(new org.littletonrobotics.conduit.schema.NetworkDirStatus()); }
  public org.littletonrobotics.conduit.schema.NetworkDirStatus rx(org.littletonrobotics.conduit.schema.NetworkDirStatus obj) { return obj.__assign(bb_pos + 0, bb); }
  public org.littletonrobotics.conduit.schema.NetworkDirStatus tx() { return tx(new org.littletonrobotics.conduit.schema.NetworkDirStatus()); }
  public org.littletonrobotics.conduit.schema.NetworkDirStatus tx(org.littletonrobotics.conduit.schema.NetworkDirStatus obj) { return obj.__assign(bb_pos + 40, bb); }

  public static int createNetworkStatus(FlatBufferBuilder builder, long rx_bandwidthKbps, long rx_bytes, long rx_dropped, long rx_errors, long rx_packets, long tx_bandwidthKbps, long tx_bytes, long tx_dropped, long tx_errors, long tx_packets) {
    builder.prep(8, 80);
    builder.prep(8, 40);
    builder.putLong(tx_packets);
    builder.putLong(tx_errors);
    builder.putLong(tx_dropped);
    builder.putLong(tx_bytes);
    builder.putLong(tx_bandwidthKbps);
    builder.prep(8, 40);
    builder.putLong(rx_packets);
    builder.putLong(rx_errors);
    builder.putLong(rx_dropped);
    builder.putLong(rx_bytes);
    builder.putLong(rx_bandwidthKbps);
    return builder.offset();
  }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public NetworkStatus get(int j) { return get(new NetworkStatus(), j); }
    public NetworkStatus get(NetworkStatus obj, int j) {  return obj.__assign(__element(j), bb); }
  }
}

