namespace org.littletonrobotics.conduit.schema;

// Constants in this file:
// 6 Joysticks
// 12 axes per joystick
// 12 POVs per joystick
// Joystick name: 256 chars
// Event name: 64 chars
// Game specific message: 64 chars

// If you change any of these numbers, you MUST update the corresponding constants in api and io implementations!

struct Joystick {
    name:[uint8:256];
    type:uint8;
    axis_count:int16;
    axis_types:[uint8:12];
    axis_values:[float32:12];
    button_count:uint8;
    buttons:int32;
    pov_count:int16;
    pov_values:[uint8:8];
    is_gamepad:bool;
}

struct DSData {
    alliance_station:int32;
    event_name:[uint8:64];
    game_specific_message_size:uint16;
    game_specific_message:[uint8:64];
    match_number:uint16;
    replay_number:uint8;
    match_type:int32;
    control_word:int32;
    match_time:float64;
    joysticks:[Joystick:6];
}

struct PDPData {
    handle:int32;
    channel_count:int32;
    type:int32;
    module_id:int32;
    faults:uint32;
    sticky_faults:uint32;
    temperature:float64;
    voltage:float64;
    channel_current:[float64:24];
    total_current:float64;
    total_power:float64;
    total_energy:float64;
}

struct NetworkDirStatus {
    bandwidth_kbps:int64;
    bytes:int64;
    dropped:int64;
    errors:int64;
    packets:int64;
}

struct NetworkStatus {
    rx:NetworkDirStatus;
    tx:NetworkDirStatus;    
}

struct Vector3 {
    x:float64;
    y:float64;
    z:float64;
}

struct Vector4 {
    w:float64;
    x:float64;
    y:float64;
    z:float64;
}

struct SystemData {
    battery_voltage:float64;
    watchdog_active:bool;
    io_frequency:int64;
    team_number:int64;
    epoch_time:int64;

    network_ethernet:NetworkStatus;
    network_wifi:NetworkStatus;
    network_usb_tether:NetworkStatus;
    network_can:[NetworkStatus:5];

    cpu_percent:float64;
    cpu_temp:float64;

    memory_usage_bytes:int64;
    memory_total_bytes:int64;
    memory_percent:float64;

    storage_usage_bytes:int64;
    storage_total_bytes:int64;
    storage_percent:float64;

    imu_accel_raw:Vector3;
    imu_gyro_rates:Vector3;
    imu_gyro_euler_flat:Vector3;
    imu_gyro_euler_landscape:Vector3;
    imu_gyro_euler_portrait:Vector3;
    imu_gyro_quaternion:Vector4;
    imu_gyro_yaw_flat:float64;
    imu_gyro_yaw_landscape:float64;
    imu_gyro_yaw_portrait:float64;
}

struct CoreInputs {
    timestamp:int64;
    ds:DSData;
    pdp:PDPData;
    sys:SystemData;
}